# This file was generated by CMake because it detected TRY_RUN() commands
# in crosscompiling mode. It will be overwritten by the next CMake run.
# Copy it to a safe location, set the variables to appropriate values
# and use it then to preset the CMake cache (using -C).


# CMAKE_REQUIRE_LARGE_FILE_SUPPORT
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set CMAKE_REQUIRE_LARGE_FILE_SUPPORT to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# CMAKE_REQUIRE_LARGE_FILE_SUPPORT__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set CMAKE_REQUIRE_LARGE_FILE_SUPPORT__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The HAVE_CMAKE_REQUIRE_LARGE_FILE_SUPPORT variable holds the build result for this TRY_RUN().
# 
# Source file   : /ccs/home/kmorel/work/src/builds/ParaView-Server/CMakeFiles/CMakeTmp/src.cxx
# Executable    : /ccs/home/kmorel/work/src/builds/ParaView-Server/CMakeFiles/cmTryCompileExec-CMAKE_REQUIRE_LARGE_FILE_SUPPORT
# Run arguments : 
#    Called from: [1]	/ccs/home/kmorel/work/src/ParaView/VTK/CMakeLists.txt

SET( CMAKE_REQUIRE_LARGE_FILE_SUPPORT 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE)

SET( CMAKE_REQUIRE_LARGE_FILE_SUPPORT__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# SHARED_LIBRARY_PATH_TYPE
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set SHARED_LIBRARY_PATH_TYPE to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# SHARED_LIBRARY_PATH_TYPE__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set SHARED_LIBRARY_PATH_TYPE__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The SHARED_LIBRARY_PATH_INFO_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /ccs/home/kmorel/work/src/ParaView/VTK/CMake/SharedLibraryPathInfo.cxx
# Executable    : /ccs/home/kmorel/work/src/builds/ParaView-Server/CMakeFiles/cmTryCompileExec-SHARED_LIBRARY_PATH_TYPE
# Run arguments :  LDPATH
#    Called from: [2]	/ccs/home/kmorel/work/src/ParaView/VTK/CMake/SharedLibraryPathVarName.cmake
#                 [1]	/ccs/home/kmorel/work/src/ParaView/VTK/CMakeLists.txt

SET( SHARED_LIBRARY_PATH_TYPE 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE)

SET( SHARED_LIBRARY_PATH_TYPE__TRYRUN_OUTPUT 
     "LD_LIBRARY_PATH"
     CACHE STRING "Output from TRY_RUN" FORCE)


# VTK_TYPE_CHAR_IS_SIGNED
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set VTK_TYPE_CHAR_IS_SIGNED to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# The VTK_TYPE_CHAR_IS_SIGNED_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /ccs/home/kmorel/work/src/ParaView/VTK/CMake/vtkTestCharSignedness.cxx
# Executable    : /ccs/home/kmorel/work/src/builds/ParaView-Server/CMakeFiles/cmTryCompileExec-VTK_TYPE_CHAR_IS_SIGNED
# Run arguments : 
#    Called from: [2]	/ccs/home/kmorel/work/src/ParaView/VTK/CMake/vtkTestTypes.cmake
#                 [1]	/ccs/home/kmorel/work/src/ParaView/VTK/CMakeLists.txt

SET( VTK_TYPE_CHAR_IS_SIGNED 
     "1"
     CACHE STRING "Result from TRY_RUN" FORCE)


# VTK_ANSI_STREAM_EOF_RESULT
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set VTK_ANSI_STREAM_EOF_RESULT to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# The VTK_ANSI_STREAM_EOF_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /ccs/home/kmorel/work/src/builds/ParaView-Server/VTK/CMake/vtkTestStreamEOF.cxx
# Executable    : /ccs/home/kmorel/work/src/builds/ParaView-Server/CMakeFiles/cmTryCompileExec-VTK_ANSI_STREAM_EOF_RESULT
# Run arguments : 
#    Called from: [2]	/ccs/home/kmorel/work/src/ParaView/VTK/CMake/vtkTestStreamsLibrary.cmake
#                 [1]	/ccs/home/kmorel/work/src/ParaView/VTK/CMakeLists.txt

SET( VTK_ANSI_STREAM_EOF_RESULT 
     "126"
     CACHE STRING "Result from TRY_RUN" FORCE)


# KWSYS_LFS_WORKS
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set KWSYS_LFS_WORKS to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# KWSYS_LFS_WORKS__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set KWSYS_LFS_WORKS__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The KWSYS_LFS_WORKS_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /ccs/home/kmorel/work/src/ParaView/VTK/Utilities/kwsys/kwsysPlatformTestsCXX.cxx
# Executable    : /ccs/home/kmorel/work/src/builds/ParaView-Server/CMakeFiles/cmTryCompileExec-KWSYS_LFS_WORKS
# Run arguments : 
#    Called from: [1]	/ccs/home/kmorel/work/src/ParaView/VTK/Utilities/kwsys/CMakeLists.txt

SET( KWSYS_LFS_WORKS 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE)

SET( KWSYS_LFS_WORKS__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# KWSYS_CHAR_IS_SIGNED
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set KWSYS_CHAR_IS_SIGNED to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# KWSYS_CHAR_IS_SIGNED__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set KWSYS_CHAR_IS_SIGNED__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The KWSYS_CHAR_IS_SIGNED_COMPILED variable holds the build result for this TRY_RUN().
# 
# Source file   : /ccs/home/kmorel/work/src/ParaView/VTK/Utilities/kwsys/kwsysPlatformTestsCXX.cxx
# Executable    : /ccs/home/kmorel/work/src/builds/ParaView-Server/CMakeFiles/cmTryCompileExec-KWSYS_CHAR_IS_SIGNED
# Run arguments : 
#    Called from: [1]	/ccs/home/kmorel/work/src/ParaView/VTK/Utilities/kwsys/CMakeLists.txt

SET( KWSYS_CHAR_IS_SIGNED 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE)

SET( KWSYS_CHAR_IS_SIGNED__TRYRUN_OUTPUT 
     ""
     CACHE STRING "Output from TRY_RUN" FORCE)


# HDF5_PRINTF_LL_TEST_RUN
#    indicates whether the executable would have been able to run on its
#    target platform. If so, set HDF5_PRINTF_LL_TEST_RUN to
#    the exit code (in many cases 0 for success), otherwise enter "FAILED_TO_RUN".
# HDF5_PRINTF_LL_TEST_RUN__TRYRUN_OUTPUT
#    contains the text the executable would have printed on stdout and stderr.
#    If the executable would not have been able to run, set HDF5_PRINTF_LL_TEST_RUN__TRYRUN_OUTPUT empty.
#    Otherwise check if the output is evaluated by the calling CMake code. If so,
#    check what the source file would have printed when called with the given arguments.
# The HDF5_PRINTF_LL_TEST_COMPILE variable holds the build result for this TRY_RUN().
# 
# Source file   : /ccs/home/kmorel/work/src/ParaView/Utilities/hdf5/CMake/HDF5Tests.c
# Executable    : /ccs/home/kmorel/work/src/builds/ParaView-Server/CMakeFiles/cmTryCompileExec-HDF5_PRINTF_LL_TEST_RUN
# Run arguments : 
#    Called from: [1]	/ccs/home/kmorel/work/src/ParaView/Utilities/hdf5/CMakeLists.txt

SET( HDF5_PRINTF_LL_TEST_RUN 
     "0"
     CACHE STRING "Result from TRY_RUN" FORCE)

SET( HDF5_PRINTF_LL_TEST_RUN__TRYRUN_OUTPUT 
     "PRINTF_LL_WIDTH=[l]"
     CACHE STRING "Output from TRY_RUN" FORCE)

